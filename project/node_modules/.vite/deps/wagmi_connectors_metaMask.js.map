{
  "version": 3,
  "sources": ["../../@wagmi/connectors/dist/metaMask.js"],
  "sourcesContent": ["import {\n  InjectedConnector\n} from \"./chunk-P4NRLOY7.js\";\nimport {\n  ConnectorNotFoundError\n} from \"./chunk-UGBGYVBH.js\";\nimport \"./chunk-OQILYQDO.js\";\nimport {\n  __privateAdd,\n  __privateGet,\n  __privateSet\n} from \"./chunk-W65LBPLT.js\";\n\n// src/metaMask.ts\nimport {\n  ResourceUnavailableRpcError,\n  UserRejectedRequestError,\n  getAddress\n} from \"viem\";\nvar _UNSTABLE_shimOnConnectSelectAccount;\nvar MetaMaskConnector = class extends InjectedConnector {\n  constructor({\n    chains,\n    options: options_\n  } = {}) {\n    const options = {\n      name: \"MetaMask\",\n      shimDisconnect: true,\n      getProvider() {\n        function getReady(ethereum2) {\n          const isMetaMask = !!ethereum2?.isMetaMask;\n          if (!isMetaMask)\n            return;\n          if (ethereum2.isBraveWallet && !ethereum2._events && !ethereum2._state)\n            return;\n          if (ethereum2.isApexWallet)\n            return;\n          if (ethereum2.isAvalanche)\n            return;\n          if (ethereum2.isBitKeep)\n            return;\n          if (ethereum2.isBlockWallet)\n            return;\n          if (ethereum2.isCoin98)\n            return;\n          if (ethereum2.isFordefi)\n            return;\n          if (ethereum2.isMathWallet)\n            return;\n          if (ethereum2.isOkxWallet || ethereum2.isOKExWallet)\n            return;\n          if (ethereum2.isOneInchIOSWallet || ethereum2.isOneInchAndroidWallet)\n            return;\n          if (ethereum2.isOpera)\n            return;\n          if (ethereum2.isPortal)\n            return;\n          if (ethereum2.isRabby)\n            return;\n          if (ethereum2.isDefiant)\n            return;\n          if (ethereum2.isTokenPocket)\n            return;\n          if (ethereum2.isTokenary)\n            return;\n          if (ethereum2.isZeal)\n            return;\n          if (ethereum2.isZerion)\n            return;\n          return ethereum2;\n        }\n        if (typeof window === \"undefined\")\n          return;\n        const ethereum = window.ethereum;\n        if (ethereum?.providers)\n          return ethereum.providers.find(getReady);\n        return getReady(ethereum);\n      },\n      ...options_\n    };\n    super({ chains, options });\n    this.id = \"metaMask\";\n    this.shimDisconnectKey = `${this.id}.shimDisconnect`;\n    __privateAdd(this, _UNSTABLE_shimOnConnectSelectAccount, void 0);\n    __privateSet(this, _UNSTABLE_shimOnConnectSelectAccount, options.UNSTABLE_shimOnConnectSelectAccount);\n  }\n  async connect({ chainId } = {}) {\n    try {\n      const provider = await this.getProvider();\n      if (!provider)\n        throw new ConnectorNotFoundError();\n      if (provider.on) {\n        provider.on(\"accountsChanged\", this.onAccountsChanged);\n        provider.on(\"chainChanged\", this.onChainChanged);\n        provider.on(\"disconnect\", this.onDisconnect);\n      }\n      this.emit(\"message\", { type: \"connecting\" });\n      let account = null;\n      if (__privateGet(this, _UNSTABLE_shimOnConnectSelectAccount) && this.options?.shimDisconnect && !this.storage?.getItem(this.shimDisconnectKey)) {\n        account = await this.getAccount().catch(() => null);\n        const isConnected = !!account;\n        if (isConnected)\n          try {\n            await provider.request({\n              method: \"wallet_requestPermissions\",\n              params: [{ eth_accounts: {} }]\n            });\n            account = await this.getAccount();\n          } catch (error) {\n            if (this.isUserRejectedRequestError(error))\n              throw new UserRejectedRequestError(error);\n            if (error.code === new ResourceUnavailableRpcError(error).code)\n              throw error;\n          }\n      }\n      if (!account) {\n        const accounts = await provider.request({\n          method: \"eth_requestAccounts\"\n        });\n        account = getAddress(accounts[0]);\n      }\n      let id = await this.getChainId();\n      let unsupported = this.isChainUnsupported(id);\n      if (chainId && id !== chainId) {\n        const chain = await this.switchChain(chainId);\n        id = chain.id;\n        unsupported = this.isChainUnsupported(id);\n      }\n      if (this.options?.shimDisconnect)\n        this.storage?.setItem(this.shimDisconnectKey, true);\n      return { account, chain: { id, unsupported }, provider };\n    } catch (error) {\n      if (this.isUserRejectedRequestError(error))\n        throw new UserRejectedRequestError(error);\n      if (error.code === -32002)\n        throw new ResourceUnavailableRpcError(error);\n      throw error;\n    }\n  }\n};\n_UNSTABLE_shimOnConnectSelectAccount = new WeakMap();\nexport {\n  MetaMaskConnector\n};\n"],
  "mappings": "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",
  "names": []
}
